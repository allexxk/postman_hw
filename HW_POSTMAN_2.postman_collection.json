{
	"info": {
		"_postman_id": "a3c0a8f1-9d4d-4058-a977-92af681a3dc1",
		"name": "HW_POSTMAN_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"first is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"first text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"user_info_3 is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var hom22 = pm.response.json();\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"check_name\",function(){\r",
							"            //название параметра       ответ  \r",
							"    pm.expect(hom22.name). to. eql(\"Aleksandr\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"check_age\", function(){\r",
							"        // \"+\" преобразует строку \"35\" в число 35\r",
							"    pm.expect(+hom22.age). to. eql(35);\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"check_salary\", function(){\r",
							"    pm.expect(hom22.salary). to. eql(5000);\r",
							"});\r",
							"//7. Спарсить request.\r",
							"//мы берем данные из body\r",
							"var par = request.data;\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_name\", function(){\r",
							"    //name из \"hom22\"  сравниваем с name из \"par\"    \r",
							"    pm.expect(hom22.name). to. eql(par.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check_age\", function(){\r",
							"    //\"+\" string to ineger или можно \"1*\"либо\"parseInt(hom22.age)\"\r",
							"    pm.expect(+hom22.age). to. eql(+par.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из //request.)\r",
							"pm.test(\"check_salary\", function(){\r",
							"    pm.expect(hom22.salary). to. eql(+par.salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(hom22.family);\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"salary_1_5\", function(){\r",
							"    pm.expect(hom22.family.u_salary_1_5_year). to. eql(4*(hom22.salary));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Aleksandr",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"object_info_3 is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"var home23 = pm.response.json();\r",
							"\r",
							"\r",
							"// Т.к home23 -string, то предаем ему значение ineger и присваиваем зачение age_h.\r",
							"var age_h = +home23.age;\r",
							"//4. Спарсить request.\r",
							"//мы берем данные из params\r",
							"var par = pm.request.url.query.toObject();\r",
							"\r",
							"// Т.к par.salary,par.age -string, то предаем ему значение ineger и присваиваем зачение salary_p,age_p.\r",
							"var sal_p = +par.salary;\r",
							"var age_p = +par.age;\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_name\",function(){\r",
							"    pm.expect(home23.name). to. eql(par.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check_age\",function(){\r",
							"    pm.expect(age_h). to. eql(age_p);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"check_salary\", function(){\r",
							"    pm.expect(home23.salary). to. eql(sal_p);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(home23.family)\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"name_dog\", function(){\r",
							"    pm.expect(home23.family.pets.dog). to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"age_dog\", function(){\r",
							"    pm.expect(home23.family.pets.dog). to. have. property(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"\r",
							"pm.test(\"name_dog_Luky\",function(){\r",
							"    pm.expect(home23.family.pets.dog.name). to. eql(\"Luky\");\r",
							"});\r",
							"//Спросить чем отличается eql от deep.eql  ????\r",
							"//pm.test(\"name_dog_Luky\", function(){\r",
							"    //pm.expect(home23.family.pets.dog). to. have. property(\"name\",\"Luky\");\r",
							"//});\r",
							"\r",
							"//pm.test(\"name_dog_Luky\",function(){\r",
							"    //pm.expect(home23.family.pets.dog.name). to. deep. eql(\"Luky\");\r",
							"//});\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"name_dog_Luky\",function(){\r",
							"    pm.expect(home23.family.pets.dog.age). to. eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Alex&age=35&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"object_info_4 is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"    var home24 = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var par = pm.request.url.query.toObject();\r",
							"var age = +par.age;\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_name\", function(){\r",
							"    pm.expect(home24.name). to. eql(par.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"check_age\", function(){\r",
							"    pm.expect(home24.age). to. eql(age);\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(par.salary);\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(home24.salary);\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(home24.salary[0]);\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(home24.salary[1]);\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(home24.salary[2]);\r",
							"\r",
							"var sal = +par.salary;\r",
							"var sal_0 = home24.salary[0];\r",
							"var sal_1 = +home24.salary[1];\r",
							"var sal_2 = +home24.salary[2];\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"check_0_salary\", function(){\r",
							"    pm.expect(sal_0). to. eql(sal);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"check_1_salary\", function(){\r",
							"    pm.expect(sal_1).to. eql(2*(sal));\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"check_3_salary\", function(){\r",
							"    pm.expect(sal_2). to. eql(3*(sal));\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", par.name);\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", age);\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", sal);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var sal_4 = home24.salary\r",
							"// один из вариантов\r",
							"for(i in sal_4){\r",
							"    console.log(\"salary\", sal_4[i]);\r",
							"};\r",
							"// цикл for\r",
							"for (i=0;i<sal_4.length;i++) {\r",
							"   console.log(i+1,\"salary\", sal_4[i]);\r",
							"};\r",
							"\r",
							"// цикл while\r",
							"var i=0\r",
							"while(i<sal_4.length){\r",
							"    console.log(i+1,\"salary \", sal_4[i]);\r",
							"    i++;\r",
							"};\r",
							"\r",
							"var count=1;\r",
							"for (var i of sal_4){\r",
							"    console.log(count, \"salary\", i)\r",
							"    count++;\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alex&age=35&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*\r",
							"1. Вставить параметр salary из окружения в request\r",
							"2. Вставить параметр age из окружения в age\r",
							"3. Вставить параметр name из окружения в name\r",
							"4. Отправить запрос.\r",
							"5. Статус код 200\r",
							"*/\r",
							"\r",
							"pm.test(\"check user_info_2 is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//6. Спарсить response body в json.\r",
							" var home_25 = pm.response.json();\r",
							"\r",
							" //7. Спарсить request.\r",
							" var par = request.data;\r",
							"\r",
							" var sal = +par.salary;\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"check_1\", function(){\r",
							"    pm.expect(home_25). to. have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"check_2\", function(){\r",
							"    pm.expect(home_25). to. have. property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"check_3\", function(){\r",
							"    pm.expect(home_25). to. have. property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"check_4\", function(){\r",
							"    pm.expect(home_25). to. have. property(\"qa_salary_after_1.5_year\"); \r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"check_5\", function(){\r",
							"    pm.expect(home_25). to. have. property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"check_6\", function(){\r",
							"    pm.expect(home_25). to. have. property(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check_7\", function(){\r",
							"    pm.expect(home_25.start_qa_salary). to. eql(sal);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"check_8\", function(){\r",
							"    pm.expect(home_25.qa_salary_after_6_months). to. eql(2*sal);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"check_9\", function(){\r",
							"    pm.expect(home_25.qa_salary_after_12_months). to. eql(2.7*sal);\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"check_10\", function(){\r",
							"    pm.expect(home_25['qa_salary_after_1.5_year']). to. eql(3.3*sal);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"check_11\", function(){\r",
							"    pm.expect(home_25['qa_salary_after_3.5_years']). to. eql(3.8*sal);\r",
							"});\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check_12\", function(){\r",
							"    pm.expect(home_25.person.u_name[1]). to.eql(sal);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"check_13\", function(){\r",
							"    pm.expect(home_25.person.u_age). to. eql(+par.age);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"check_14\", function(){\r",
							"    pm.expect(home_25.person.u_salary_5_years). to. eql(4.2*sal);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"// Первый вариант\r",
							"/*var arr_pers = home_25.person.u_name;\r",
							"for(i in arr_pers){\r",
							"    console.log(i+\" \",arr_pers[i])\r",
							"}\r",
							"*/\r",
							"// Второй вариант\r",
							"var pers = home_25.person;\r",
							"/*for(i in pers){\r",
							"    console.log(i+\" \"+pers[i])\r",
							"    // выводит в строку\r",
							"}\r",
							"\r",
							"*/\r",
							"// ещё вариант\r",
							"for (i in pers){\r",
							"    console.log(i,pers[i])\r",
							"    //выводит списком\r",
							"}\r",
							"\r",
							"// Третий вариант\r",
							"\r",
							"/*\r",
							"    for (i in pers){\r",
							"        if (typeof(pers[i]) === \"object\" ){\r",
							"               arr_pers = pers.u_name;\r",
							"                 for(j=0;j<arr_pers.length;j++){\r",
							"        console.log(\"element u_name - \"+String(j),arr_pers[j]);\r",
							"        \r",
							"            }\r",
							"            }\r",
							"    else{ \r",
							"    console.log(i, pers[i]);\r",
							"    } ; \r",
							"        } ;\r",
							"    */\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}